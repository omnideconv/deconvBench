params {

  /*** input directories and files ***/
  
  data_dir_bulk = "/nfs/data/omnideconv_benchmarking/data/PBMC/"                              // directory to bulk RNA-seq datasets
  data_dir_sc = "/nfs/data/omnideconv_benchmarking/data/singleCell/"                          // directory to scRNA-seq datasets
  sc_files = "/nfs/home/students/adietrich/omnideconv/benchmark/pipeline/sc_files_table.csv"  // file that gives info on scRNA-seq datasets and their names

  
  /*** output directories and files ***/
  
  results_dir_general = "/nfs/data/omnideconv_benchmarking_clean/benchmark_results"           // here all final results are stores
  preProcess_dir = "/nfs/data/omnideconv_benchmarking_clean/preprocess_results"               // directory where intermediate files for preprocessing or subsampling are stored. Will be cleared after completion of pipeline
  //workDir = "/nfs/home/students/adietrich/omnideconv/benchmark/work"                          // working directory for nextflow
  
  
  /*** parameters for benchmarking ***/
  
  //single_cell_list = ["hao-sampled-1","hao-sampled-2","hao-sampled-3","hao-sampled-4"]        // list of scRNA-seq dataset names that are used (no underscores in the names allowed!)
  //single_cell_norm = ["counts","cpm"]                                                         // list of normalization methods for scRNA-seq datasets
  //bulk_list = ["finotello","finotello-simulation","hoek","hoek-simulation"]                   // list of bulk RNA-seq dataset names that are used
  //bulk_norm = ["counts","tpm"]                                                                // list of normalization methods for bulk RNA-seq datasets
  
  //method_list = ["momf","music","scdc","scaden","bisque","cibersortx","bayesprism","autogenes","dwls"]  // list of deconvolution methods
  
  run_preprocessing = false                                                                      // if preprocessing of scRNA-seq dataset should be applied
  ct_fractions = [0.01, 0.05]                                                                   // cell-type fractions for subsampling                  
  replicates = 5                                                                                // number of replicates for subsampling
  
  
  /*** other parameters ***/
  
  publishDirMode = "copy"
  ncores = '2'


  single_cell_list = ["hao-sampled-1"]
  single_cell_norm = ["counts", "cpm"]
  bulk_list = ["hoek","finotello"]
  bulk_norm = ["tpm","counts"]  
  method_list = ["bayesprism"]
  
}


profiles {
     standard {
        process.executor = 'local'
        process.max_retries = 50
        process.cpu = params.ncores
        process.memory = '50 GB'
        docker.enabled = true
        process.container = 'omnideconv_benchmark:latest'
        docker.temp = "auto"
     }
     cluster {
        process.executor = 'slurm'
        process.cpu = params.ncores
        process.memory = '50 GB'
        docker.enabled = true
        process.container = 'omnideconv_benchmark:latest'
        containerOptions = "--user adietrich"
        docker.temp = "auto"
     }
     cluster_dwls {
        process.executor = 'slurm'
        process.cpu = '24'
        process.memory = '200 GB'
        docker.enabled = true
        process.container = 'omnideconv_benchmark:latest'
        containerOptions = "--user ubuntu"
        docker.temp = "auto"
     }
}

docker {  
  runOptions = '-u $(id -u):$(id -g) --cpus 10'
}

dag {
  overwrite = true
}

report {
  overwrite = true
}



// start on cluster like this:
// nextflow -C /nfs/home/students/adietrich/omnideconv/benchmark/pipeline/nextflow_norm.config run /nfs/home/students/adietrich/omnideconv/benchmark/pipeline/runOmnideconvBenchmarkNORM.nf -profile cluster -with-report ~/omnideconv/benchmark/test_report.html