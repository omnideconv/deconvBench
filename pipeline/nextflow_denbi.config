params {
  workDir = "/vol/omnideconv/work"
  publishDirMode = "copy"
  results_dir_general = "/vol/omnideconv/results_run"
  results_dir = "/vol/omnideconv/results_run"
  single_cell_list = ["hao-sampled-1"]
  //single_cell_list = ["hao-sampled-1"]
  single_cell_norm = ["counts"]
  bulk_list = ["finotello-simulation"]
  bulk_norm = ["counts"]
  method_list2 = []
  method_list = ["bisque","bayesprism"]
  //method_list = ["scaden"]
  extra_parameters = []
  data_dir_bulk = "/vol/omnideconv/omnideconv_data/PBMC/"
  data_dir_sc = "/vol/omnideconv/omnideconv_data/singleCell/"
  mapping_sheet = "/vol/omnideconv/benchmark/pipeline/cell_type_mapping.xlsx"
  sc_files = "/vol/omnideconv/benchmark/pipeline/sc_files_table.csv"
  simulation_scenarios = ["spikein", "truefractions", "spillover"]
}


profiles {
     standard {
        process.executor = 'local'
        process.max_retries = 50
     }
     cluster {
        process.executor = 'slurm'
        process.cpu = '28'
        process.memory = '240 GB'
        docker.enabled = true
        process.container = 'omnideconv_benchmark:latest'
        containerOptions = "--user root"
        docker.temp = "auto"
        docker.cacheDir = "/vol/spool/tmp"
     }
     local {
	      singularity.enabled = true
	      singularity.cacheDir = '/nfs/scratch/singularity_cache'
	      process.cpu = '30'
        process.memory = '250 GB'
     }
}

docker {
  user = 'ubuntu:ubuntu'
  runOptions = '-v /var/run/docker.sock:/var/run/docker.sock'
}

process {
  withLabel: 'deconvolution_related' {
   memory = '200 GB'
  }
}


// start on cluster like this:
// nextflow -C ~/benchmark/omnideconv/nextflow_denbi.config run ~/benchmark/pipeline/runOmnideconvBenchmark.nf -profile cluster -w /vol/spool/work
// nextflow -C /vol/omnideconv/benchmark/pipeline/nextflow_denbi.config run /vol/omnideconv/benchmark/pipeline/runOmnideconvBenchmark.nf -profile cluster -w /vol/omnideconv/work/