params {

  /*** input directories and files ***/
  
  data_dir_bulk = "/nfs/data/omnideconv_benchmarking_clean/data/PBMC/"                              // directory to bulk RNA-seq datasets
  data_dir_sc = "/nfs/data/omnideconv_benchmarking_clean/data/singleCell/"                          // directory to scRNA-seq datasets

  /*** output directories and files ***/
  
  results_dir_general = "/nfs/data/omnideconv_benchmarking_clean/benchmark_results"           // here all final results are stores
  preProcess_dir = "/nfs/data/omnideconv_benchmarking_clean/preprocess_results"               // directory where intermediate files for preprocessing or subsampling are stored
  workDir = "/nfs/home/students/adietrich/omnideconv/benchmark/work"                          // working directory for nextflow
  
  
  /*** parameters for benchmarking ***/
  
  //single_cell_list = ["hao-sampled-1","hao-sampled-2","hao-sampled-3","hao-sampled-4"]        // list of scRNA-seq dataset names that are used (no underscores in the names allowed!)
  //single_cell_norm = ["counts","cpm"]                                                         // list of normalization methods for scRNA-seq datasets
  //bulk_list = ["finotello","finotello-simulation","hoek","hoek-simulation"]                   // list of bulk RNA-seq dataset names that are used
  //bulk_norm = ["counts","tpm"]                                                                // list of normalization methods for bulk RNA-seq datasets
  
  //method_list = ["momf","music","scdc","scaden","bisque","cibersortx","bayesprism","autogenes","dwls"]  // list of deconvolution methods
  
  run_preprocessing = false                                                                      // if preprocessing of scRNA-seq dataset should be applied
  ct_fractions = [0.01, 0.05]                                                                   // cell-type fractions for subsampling                  
  replicates = 5                                                                                // number of replicates for subsampling
  
 /*** parameters for simulations ***/
  
  simulation_sc_dataset = "hao-sampled-1"                                                       // name of sc dataset that will be used as basis for simulations
  simulation_sc_norm = "counts"                                                                 // normalization of sc dataset that will be used as basis for simulations
  simulation_n_cells = [1000, 2000]                                                             // number of cells in a pseudo-bulk sample
  simulation_scenario = ['random']                                                              // simulation scenario
  simulation_n_samples = [10]                                                                   // number of pseudo-bulk samples to be generated per simulation run
  simulation_pseudobulk_norm = ["tpm"]                                                          // what type of pseudo-bulk normalization do you want to use
  simulation_cell_types = [[]]                                                                  // which cells to consider for the simulation/signature building. Can be different from those used for the spillover
  
  /*** parameters for spillover ***/
  spillover_samples_per_cell = [10]                                                             // in the spillover analysis samples contain only one cell types. How many samples we should generate this way
  spillover_celltypes = []                                                                      // if we want to select only certain cell types for the spillover analysis
  
  /*** parameters for sensitivity/unknown cellular content analysis ***/
  known_cell_types = [['B cells', 'Macrophages', 'NK cells', 'Stromal cells']]                  // subset of cell types that we will use to build the isgnature matrix
  unknown_cell_type = ['Tumor cells']                                                           // unknown cell type to use
  fractions_unknown_cells = [0.05, 0.1, 0.2, 0.3, 0.5, 0.7, 0.8]                                // fractions of the unknown cell types to use
  
  /*** parameters for cell resolution analysis ***/
  higher_resolution_cell_types = ['T cells', 'DCs']                                             // which cell types will we inspect at various resolutions?
  
  /*** other parameters ***/
  
  publishDirMode = "copy"
  ncores = '10'
  species_sc = 'hs'                                                                             // type of species (mm or hs); only used for bayesprism


  single_cell_list = ["hao-sampled-1"]
  single_cell_norm = ["counts", "cpm"]
  bulk_list = ["hoek","finotello"]
  bulk_norm = ["tpm","counts"]  
  method_list = ["bayesprism"]
  
}


profiles {
     standard {
        process.executor = 'local'
        process.max_retries = 50
        process.cpu = params.ncores
        process.memory = '50 GB'
        docker.enabled = true
        process.container = 'omnideconv_benchmark:latest'
        docker.temp = "auto"
     }
     cluster {
        process.executor = 'slurm'
        process.cpu = params.ncores
        process.memory = '50 GB'
        docker.enabled = true
        process.container = 'omnideconv_benchmark:latest'
        containerOptions = "--user adietrich"
        docker.temp = "auto"
     }
     cluster_tum {
        process.executor = 'slurm'
        process.cpus = 10
        process.memory = '40 GB'
        docker.enabled = false
     }
}

dag {
  overwrite = true
}

report {
  overwrite = true
}

trace {
  enabled = true
  file = '/nfs/home/students/adietrich/omnideconv/benchmark/reports_traces/trace.txt'
  fields = 'task_id,process,name,status,module,container,cpus,time,disk,memory,realtime,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,script'
  sep = ','
  overwrite = true
}


// start on cluster like this:
// nextflow -C /nfs/home/students/adietrich/omnideconv/benchmark/pipeline/nextflow_norm.config run /nfs/home/students/adietrich/omnideconv/benchmark/pipeline/runOmnideconvBenchmarkNORM.nf -profile cluster_tum -with-trace -entry simulation